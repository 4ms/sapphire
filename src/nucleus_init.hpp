// DO NOT EDIT - THIS CODE IS AUTO-GENERATED BY: nukesolve.cpp
#pragma once
#include "nucleus_engine.hpp"
namespace Sapphire
{
    inline int SetMinimumEnergy(NucleusEngine& engine)
    {
        const int n = static_cast<int>(engine.numParticles());
        if (n != 5) return 777;

        Particle& p0 = engine.particle(0);
        p0.vel = PhysicsVector::zero();
        p0.pos[0] = 0;
        p0.pos[1] = 0;
        p0.pos[2] = 0;
        p0.pos[3] = 0;

        Particle& p1 = engine.particle(1);
        p1.vel = PhysicsVector::zero();
        p1.pos[0] = 0.4220401346683502;
        p1.pos[1] = -0.3291995823383331;
        p1.pos[2] = 0.9572452902793884;
        p1.pos[3] = 0;

        Particle& p2 = engine.particle(2);
        p2.vel = PhysicsVector::zero();
        p2.pos[0] = -0.2526869177818298;
        p2.pos[1] = -0.9897432327270508;
        p2.pos[2] = 0.3993206918239594;
        p2.pos[3] = 0;

        Particle& p3 = engine.particle(3);
        p3.vel = PhysicsVector::zero();
        p3.pos[0] = -0.4374156892299652;
        p3.pos[1] = -0.1912712454795837;
        p3.pos[2] = 0.7553260922431946;
        p3.pos[3] = 0;

        Particle& p4 = engine.particle(4);
        p4.vel = PhysicsVector::zero();
        p4.pos[0] = 0.5502784848213196;
        p4.pos[1] = -0.6880605816841125;
        p4.pos[2] = 0.1490195691585541;
        p4.pos[3] = 0;

        return 0;
    }
}
