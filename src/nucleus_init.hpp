// DO NOT EDIT - THIS CODE IS AUTO-GENERATED BY: nukesolve.cpp
#pragma once
#include "nucleus_engine.hpp"
namespace Sapphire
{
    inline int SetMinimumEnergy(NucleusEngine& engine)
    {
        const int n = static_cast<int>(engine.numParticles());
        if (n != 5) return 777;

        Particle& p0 = engine.particle(0);
        p0.vel = PhysicsVector::zero();
        p0.pos[0] = 0;
        p0.pos[1] = 0;
        p0.pos[2] = 0;
        p0.pos[3] = 0;

        Particle& p1 = engine.particle(1);
        p1.vel = PhysicsVector::zero();
        p1.pos[0] = 0.4339916706085205;
        p1.pos[1] = -0.6600748300552368;
        p1.pos[2] = 0.4175384640693665;
        p1.pos[3] = 0;

        Particle& p2 = engine.particle(2);
        p2.vel = PhysicsVector::zero();
        p2.pos[0] = -0.3948631584644318;
        p2.pos[1] = -0.6067963242530823;
        p2.pos[2] = -0.5236393809318542;
        p2.pos[3] = 0;

        Particle& p3 = engine.particle(3);
        p3.vel = PhysicsVector::zero();
        p3.pos[0] = -0.3851629793643951;
        p3.pos[1] = -0.9881566762924194;
        p3.pos[2] = 0.2829462289810181;
        p3.pos[3] = 0;

        Particle& p4 = engine.particle(4);
        p4.vel = PhysicsVector::zero();
        p4.pos[0] = 0.4460647404193878;
        p4.pos[1] = -0.8991214632987976;
        p4.pos[2] = -0.4444854855537415;
        p4.pos[3] = 0;

        return 0;
    }
}
