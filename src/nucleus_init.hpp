// DO NOT EDIT - THIS CODE IS AUTO-GENERATED BY: nukesolve.cpp
#pragma once
#include "nucleus_engine.hpp"
namespace Sapphire
{
    inline int SetMinimumEnergy(NucleusEngine& engine)
    {
        const int n = static_cast<int>(engine.numParticles());
        if (n != 5) return 777;

        Particle& p0 = engine.particle(0);
        p0.vel = PhysicsVector::zero();
        p0.pos[0] = 0;
        p0.pos[1] = 0;
        p0.pos[2] = 0;
        p0.pos[3] = 0;

        Particle& p1 = engine.particle(1);
        p1.vel = PhysicsVector::zero();
        p1.pos[0] = -1.050816059112549;
        p1.pos[1] = -0.273479551076889;
        p1.pos[2] = 0.1543504893779755;
        p1.pos[3] = 0;

        Particle& p2 = engine.particle(2);
        p2.vel = PhysicsVector::zero();
        p2.pos[0] = -0.4834366738796234;
        p2.pos[1] = -0.5983120203018188;
        p2.pos[2] = -0.4547337293624878;
        p2.pos[3] = 0;

        Particle& p3 = engine.particle(3);
        p3.vel = PhysicsVector::zero();
        p3.pos[0] = -0.7377388477325439;
        p3.pos[1] = 0.1904145479202271;
        p3.pos[2] = -0.7888692021369934;
        p3.pos[3] = 0;

        Particle& p4 = engine.particle(4);
        p4.vel = PhysicsVector::zero();
        p4.pos[0] = -0.7090007066726685;
        p4.pos[1] = 0.5429291725158691;
        p4.pos[2] = 0.03169500455260277;
        p4.pos[3] = 0;

        return 0;
    }
}
