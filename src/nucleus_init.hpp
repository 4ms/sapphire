// DO NOT EDIT - THIS CODE IS AUTO-GENERATED BY: nukesolve.cpp
#pragma once
#include "nucleus_engine.hpp"
namespace Sapphire
{
    inline int SetMinimumEnergy(NucleusEngine& engine)
    {
        const int n = static_cast<int>(engine.numParticles());
        if (n != 5) return 777;

        Particle& p0 = engine.particle(0);
        p0.vel = PhysicsVector::zero();
        p0.pos[0] = 0;
        p0.pos[1] = 0;
        p0.pos[2] = 0;
        p0.pos[3] = 0;

        Particle& p1 = engine.particle(1);
        p1.vel = PhysicsVector::zero();
        p1.pos[0] = 0.4223289787769318;
        p1.pos[1] = -0.3325003683567047;
        p1.pos[2] = 0.9552403092384338;
        p1.pos[3] = 0;

        Particle& p2 = engine.particle(2);
        p2.vel = PhysicsVector::zero();
        p2.pos[0] = -0.2522332072257996;
        p2.pos[1] = -0.9919942021369934;
        p2.pos[2] = 0.3959535360336304;
        p2.pos[3] = 0;

        Particle& p3 = engine.particle(3);
        p3.vel = PhysicsVector::zero();
        p3.pos[0] = -0.4377925395965576;
        p3.pos[1] = -0.1950607895851135;
        p3.pos[2] = 0.7540890574455261;
        p3.pos[3] = 0;

        Particle& p4 = engine.particle(4);
        p4.vel = PhysicsVector::zero();
        p4.pos[0] = 0.549835205078125;
        p4.pos[1] = -0.6891141533851624;
        p4.pos[2] = 0.1454758793115616;
        p4.pos[3] = 0;

        return 0;
    }
}
