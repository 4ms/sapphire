// DO NOT EDIT - THIS CODE IS AUTO-GENERATED BY: nukesolve.cpp
#pragma once
#include "nucleus_engine.hpp"
namespace Sapphire
{
    inline int SetMinimumEnergy(NucleusEngine& engine)
    {
        const int n = static_cast<int>(engine.numParticles());
        if (n != 5) return 777;

        Particle& p0 = engine.particle(0);
        p0.vel = PhysicsVector::zero();
        p0.pos[0] = 0;
        p0.pos[1] = 0;
        p0.pos[2] = 0;
        p0.pos[3] = 0;

        Particle& p1 = engine.particle(1);
        p1.vel = PhysicsVector::zero();
        p1.pos[0] = -0.9228609204292297;
        p1.pos[1] = -0.3682150840759277;
        p1.pos[2] = -0.4678522348403931;
        p1.pos[3] = 0;

        Particle& p2 = engine.particle(2);
        p2.vel = PhysicsVector::zero();
        p2.pos[0] = -0.9574689269065857;
        p2.pos[1] = 0.4942127168178558;
        p2.pos[2] = 0.2077325284481049;
        p2.pos[3] = 0;

        Particle& p3 = engine.particle(3);
        p3.vel = PhysicsVector::zero();
        p3.pos[0] = -0.5303189158439636;
        p3.pos[1] = 0.4277636706829071;
        p3.pos[2] = -0.5760546326637268;
        p3.pos[3] = 0;

        Particle& p4 = engine.particle(4);
        p4.vel = PhysicsVector::zero();
        p4.pos[0] = -0.7180177569389343;
        p4.pos[1] = -0.3482887744903564;
        p4.pos[2] = 0.3997887969017029;
        p4.pos[3] = 0;

        return 0;
    }
}
